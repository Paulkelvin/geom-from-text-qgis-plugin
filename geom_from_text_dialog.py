# -*- coding: utf-8 -*-
"""
/***************************************************************************
 GeomFromTextDialog
                                 A QGIS plugin
 This plugin creates new cadastre parcels and beacons
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2023-03-28
        git sha              : $Format:%H$
        copyright            : (C) 2023 by Sivan Design Inc
        email                : guy.magen@sivandesign.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os

from qgis.PyQt import uic
from qgis.PyQt import QtWidgets

# load 1st ui file for the csv input
FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'geom_from_text_dialog_base.ui'))

class GeomFromTextDialog(QtWidgets.QDialog, FORM_CLASS):
    def __init__(self, parent=None):
        """Constructor."""
        super(GeomFromTextDialog, self).__init__(parent)
        self.setupUi(self)

        # assign epsg codes to the comboBox items 
        self.cmb.setItemData(0, 26331) # Minna / UTM zone 31N
        self.cmb.setItemData(1, 26391) # NNO
        self.cmb.setItemData(2, 32631) # WGS 84 / UTM zone 31N

        # disable OK button initially
        self.ok_button = self.button_box.button(self.button_box.Ok)
        self.ok_button.setEnabled(False)
        # connect QLineEdit validation function
        self.ldt.textChanged.connect(self.update_validation)

    def update_validation(self):
        """Enable OK button when input is provided and highlight field if empty."""
        text_filled = bool(self.ldt.text().strip())
        self.ok_button.setEnabled(text_filled)

        # highlight empty field
        self.ldt.setStyleSheet("" if text_filled else "border: 2px solid red;")

# load 2nd ui file for the parcel review dialog
FORM_CLASS1, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'geom_from_text_dialog_review.ui'))

class GeomFromTextReview(QtWidgets.QDialog, FORM_CLASS1):
    def __init__(self, parent=None):
        """Constructor."""
        super(GeomFromTextReview, self).__init__(parent)
        self.setupUi(self)
